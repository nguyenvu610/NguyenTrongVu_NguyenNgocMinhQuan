/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package view;

import util.DBConnection;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.sql.*;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.List;

/**
 *
 * @author Tai Smart PC
 */
public class TimKiemDonHangPanel extends javax.swing.JPanel {

    private DefaultTableModel model;
    private SimpleDateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");

    /**
     * Creates new form TimKiemDonHangPanel
     */
    public TimKiemDonHangPanel() {
        initComponents();
        setupTable();
        setupComboBox();
        loadAllData();
        setupTableClickEvent();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtHoaDon = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtSDT = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtKhanhHang = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        cboTrangThai = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblTraCuu = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        btnTimKiem = new javax.swing.JButton();
        btnLamMoi = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 28)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 51, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("TÌM KIẾM ĐƠN HÀNG");

        jLabel2.setFont(new java.awt.Font("Sitka Heading", 1, 14)); // NOI18N
        jLabel2.setText("Mã Hóa Đơn");

        txtHoaDon.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Sitka Heading", 1, 14)); // NOI18N
        jLabel3.setText("SĐT");

        txtSDT.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Sitka Heading", 1, 14)); // NOI18N
        jLabel4.setText("Tên KH");

        txtKhanhHang.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Sitka Heading", 1, 14)); // NOI18N
        jLabel5.setText("Trạng Thái");

        cboTrangThai.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        cboTrangThai.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtHoaDon, javax.swing.GroupLayout.DEFAULT_SIZE, 211, Short.MAX_VALUE)
                    .addComponent(txtSDT))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cboTrangThai, 0, 280, Short.MAX_VALUE)
                    .addComponent(txtKhanhHang))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtHoaDon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4)
                        .addComponent(txtKhanhHang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel2))
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSDT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel5)
                    .addComponent(cboTrangThai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tblTraCuu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5", "Title 6", "Title 7"
            }
        ));
        tblTraCuu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblTraCuuMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblTraCuu);

        btnTimKiem.setFont(new java.awt.Font("Sitka Heading", 1, 14)); // NOI18N
        btnTimKiem.setText("Tìm Kiếm");
        btnTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKiemActionPerformed(evt);
            }
        });

        btnLamMoi.setFont(new java.awt.Font("Sitka Heading", 1, 14)); // NOI18N
        btnLamMoi.setText("Làm Mới");
        btnLamMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLamMoiActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(btnTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45)
                .addComponent(btnLamMoi, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(48, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnLamMoi)
                    .addComponent(btnTimKiem))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(203, 203, 203)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 361, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(112, 112, 112)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 691, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(15, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    private void setupTable() {
        model = new DefaultTableModel(new String[]{
            "Mã Đơn", "Tên Khách Hàng", "Số Điện Thoại", "Trạng Thái",
            "Ngày Nhận", "Ngày Trả", "Dịch Vụ"
        }, 0) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false; // Không cho phép edit trực tiếp
            }
        };
        tblTraCuu.setModel(model);

        // Thiết lập độ rộng cột
        tblTraCuu.getColumnModel().getColumn(0).setPreferredWidth(80);  // Mã Đơn
        tblTraCuu.getColumnModel().getColumn(1).setPreferredWidth(150); // Tên KH
        tblTraCuu.getColumnModel().getColumn(2).setPreferredWidth(100); // SĐT
        tblTraCuu.getColumnModel().getColumn(3).setPreferredWidth(100); // Trạng Thái
        tblTraCuu.getColumnModel().getColumn(4).setPreferredWidth(100); // Ngày Nhận
        tblTraCuu.getColumnModel().getColumn(5).setPreferredWidth(100); // Ngày Trả
        tblTraCuu.getColumnModel().getColumn(6).setPreferredWidth(200); // Dịch Vụ
    }

    private void setupComboBox() {
        cboTrangThai.removeAllItems();
        cboTrangThai.addItem("Tất cả");
        cboTrangThai.addItem("Chờ xử lý");
        cboTrangThai.addItem("Đang giặt");
        cboTrangThai.addItem("Hoàn thành");
        cboTrangThai.addItem("Đã giao");
        cboTrangThai.setSelectedIndex(0);
    }

    private void setupTableClickEvent() {
        tblTraCuu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                if (evt.getClickCount() == 2) { // Double click
                    showDetailDialog();
                }
            }
        });
    }

    private void showDetailDialog() {
        int selectedRow = tblTraCuu.getSelectedRow();
        if (selectedRow == -1) {
            return;
        }

        String maDon = tblTraCuu.getValueAt(selectedRow, 0).toString();
        String tenKH = tblTraCuu.getValueAt(selectedRow, 1).toString();
        String sdt = tblTraCuu.getValueAt(selectedRow, 2).toString();
        String trangThai = tblTraCuu.getValueAt(selectedRow, 3).toString();
        String ngayNhan = tblTraCuu.getValueAt(selectedRow, 4).toString();
        String ngayTra = tblTraCuu.getValueAt(selectedRow, 5) != null
                ? tblTraCuu.getValueAt(selectedRow, 5).toString() : "Chưa có";
        String dichVu = tblTraCuu.getValueAt(selectedRow, 6) != null
                ? tblTraCuu.getValueAt(selectedRow, 6).toString() : "Chưa có dịch vụ";

        String message = String.format(
                "THÔNG TIN ĐƠN HÀNG\n\n"
                + "Mã đơn: %s\n"
                + "Khách hàng: %s\n"
                + "Số điện thoại: %s\n"
                + "Trạng thái: %s\n"
                + "Ngày nhận: %s\n"
                + "Ngày trả: %s\n\n"
                + "Dịch vụ sử dụng:\n%s",
                maDon, tenKH, sdt, trangThai, ngayNhan, ngayTra, dichVu
        );

        JOptionPane.showMessageDialog(this, message,
                "Chi tiết đơn hàng #" + maDon,
                JOptionPane.INFORMATION_MESSAGE);
    }

    private void btnTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimKiemActionPerformed
        String maDon = txtHoaDon.getText().trim();
        String sdt = txtSDT.getText().trim();
        String tenKH = txtKhanhHang.getText().trim();
        String trangThai = cboTrangThai.getSelectedItem().toString();

        // Kiểm tra có điều kiện tìm kiếm nào không
        if (maDon.isEmpty() && sdt.isEmpty() && tenKH.isEmpty() && trangThai.equals("Tất cả")) {
            JOptionPane.showMessageDialog(this,
                    "Vui lòng nhập ít nhất một điều kiện tìm kiếm!",
                    "Thông báo",
                    JOptionPane.WARNING_MESSAGE);
            return;
        }

        StringBuilder whereClause = new StringBuilder("WHERE 1=1 ");
        List<Object> params = new ArrayList<>();

        if (!maDon.isEmpty()) {
            try {
                // Nếu nhập số thì tìm chính xác
                int maDonInt = Integer.parseInt(maDon);
                whereClause.append("AND MaDon = ? ");
                params.add(maDonInt);
            } catch (NumberFormatException e) {
                // Nếu không phải số thì tìm LIKE
                whereClause.append("AND CAST(MaDon AS NVARCHAR) LIKE ? ");
                params.add("%" + maDon + "%");
            }
        }

        if (!sdt.isEmpty()) {
            whereClause.append("AND SoDienThoai LIKE ? ");
            params.add("%" + sdt + "%");
        }

        if (!tenKH.isEmpty()) {
            whereClause.append("AND TenKhachHang LIKE N'%' + ? + N'%' ");
            params.add(tenKH);
        }

        if (!trangThai.equals("Tất cả")) {
            whereClause.append("AND TrangThai = N'?' ");
            // Fix: Không cần thêm vào params vì đã embed trực tiếp
            whereClause = new StringBuilder(whereClause.toString().replace("N'?'", "N'" + trangThai + "'"));
        }

        loadData(whereClause.toString(), params.toArray());
    }//GEN-LAST:event_btnTimKiemActionPerformed

    private void btnLamMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLamMoiActionPerformed
        clearForm();
        loadAllData();
        JOptionPane.showMessageDialog(this,
                "Đã làm mới dữ liệu!",
                "Thông báo",
                JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_btnLamMoiActionPerformed

    private void tblTraCuuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblTraCuuMouseClicked
        int row = tblTraCuu.getSelectedRow();
        if (row >= 0) {
            txtHoaDon.setText(tblTraCuu.getValueAt(row, 0).toString());
            txtKhanhHang.setText(tblTraCuu.getValueAt(row, 1).toString());
            txtSDT.setText(tblTraCuu.getValueAt(row, 2).toString());
            cboTrangThai.setSelectedItem(tblTraCuu.getValueAt(row, 3).toString());
        }
    }//GEN-LAST:event_tblTraCuuMouseClicked

    private void clearForm() {
        txtHoaDon.setText("");
        txtSDT.setText("");
        txtKhanhHang.setText("");
        cboTrangThai.setSelectedIndex(0);
        tblTraCuu.clearSelection();
    }

    private void loadAllData() {
        loadData("", new Object[0]);
    }

    private void loadData(String whereClause, Object... params) {
        try (Connection conn = DBConnection.getConnection()) {
            if (conn == null) {
                JOptionPane.showMessageDialog(this,
                        "Không thể kết nối cơ sở dữ liệu!",
                        "Lỗi kết nối",
                        JOptionPane.ERROR_MESSAGE);
                return;
            }

            String sql = "SELECT MaDon, TenKhachHang, SoDienThoai, TrangThai, NgayNhan, NgayTra, DichVuSuDung "
                    + "FROM v_TraCuuDonGiat "
                    + (whereClause.isEmpty() ? "" : whereClause)
                    + " ORDER BY NgayNhan DESC";

            try (PreparedStatement ps = conn.prepareStatement(sql)) {
                // Set parameters
                for (int i = 0; i < params.length; i++) {
                    ps.setObject(i + 1, params[i]);
                }

                try (ResultSet rs = ps.executeQuery()) {
                    model.setRowCount(0); // Xóa dữ liệu cũ

                    int count = 0;
                    while (rs.next()) {
                        Object[] row = new Object[7];
                        row[0] = rs.getInt("MaDon");
                        row[1] = rs.getString("TenKhachHang");
                        row[2] = rs.getString("SoDienThoai");
                        row[3] = rs.getString("TrangThai");

                        // Format date
                        Date ngayNhan = rs.getDate("NgayNhan");
                        row[4] = ngayNhan != null ? dateFormat.format(ngayNhan) : "";

                        Date ngayTra = rs.getDate("NgayTra");
                        row[5] = ngayTra != null ? dateFormat.format(ngayTra) : "";

                        row[6] = rs.getString("DichVuSuDung");

                        model.addRow(row);
                        count++;
                    }

                    // Hiển thị số lượng kết quả
                    updateResultCount(count);
                }
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this,
                    "Lỗi tải dữ liệu: " + e.getMessage(),
                    "Lỗi Database",
                    JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }
    }

    private void updateResultCount(int count) {
        String title = count > 0
                ? String.format("TÌM KIẾM ĐỠN HÀNG (%d kết quả)", count)
                : "TÌM KIẾM ĐƠN HÀNG (Không có kết quả)";
        jLabel1.setText(title);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLamMoi;
    private javax.swing.JButton btnTimKiem;
    private javax.swing.JComboBox<String> cboTrangThai;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblTraCuu;
    private javax.swing.JTextField txtHoaDon;
    private javax.swing.JTextField txtKhanhHang;
    private javax.swing.JTextField txtSDT;
    // End of variables declaration//GEN-END:variables
}
